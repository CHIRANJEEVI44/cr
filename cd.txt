#include <stdio.h>

int main() {
    int i, m, n, tot;
    int s[20]; // Array to hold the size of each page

    // Input total memory size
    printf("Enter total memory size: ");
    scanf("%d", &tot);

    // Input number of pages
    printf("Enter number of pages: ");
    scanf("%d", &n);

    // Input memory reserved for OS
    printf("Enter memory reserved for OS: ");
    scanf("%d", &m);

    // Validate total memory and memory reserved for OS
    if (m > tot) {
        printf("Memory reserved for OS cannot be more than total memory size.\n");
        return 1; // Exit with an error code
    }

    // Adjust total memory to account for the OS memory
    tot = tot - m;

    // Input size for each page
    for (i = 0; i < n; i++) {
        printf("Enter size of page %d: ", i + 1);
        scanf("%d", &s[i]);
    }

    // Allocate pages and check for fragmentation
    for (i = 0; i < n; i++) {
        if (tot >= s[i]) {
            printf("Allocate page %d\n", i + 1);
            tot = tot - s[i];
        } else {
            printf("Process p%d is blocked\n", i + 1);
        }
    }

    // Output remaining external fragmentation
    printf("External Fragmentation is = %d\n", tot);

    return 0; // Exit the program successfully
}